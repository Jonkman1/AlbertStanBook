[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "AlbertStanBook",
    "section": "",
    "text": "This is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introductie",
    "section": "",
    "text": "Albert, Jim. 2020. “Bayesian Modeling Using Stan.” https://bayesball.github.io/BRMS/.\n\n\nAlbert, Jingchen, Jim & Hu. 2020. Probability and Bayesian Modeling. Boca Raton: CRC Press."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  BRMS",
    "section": "",
    "text": "In Probability and Bayesian Modeling, wordt de JAGS software gebruikt om te illustreren hoe verschillende Bayesiaanse modellen met Markov Chain Monte Carlo (MCMC) methodes zijn te fitten. JAGS bestaat uit een mix van conjugatieve, Gibbs sampling en Metropolis algoritmes. De laatste jaren is de Hamiltoniaanse sampling methode en de daarmee geassocieerde Stan software populair geworden om Bayesiaanse modellen met MCMC-methodes te draaien.\nHet doel van het aanvullend supplement dat Albert heeft gemaakt is om duidelijk te maken hoe deze veel voorkomende Bayesiaanse statistische modellen zijn te fitten met gebruikmaking van het brms pakket, een populair interface naar Stan. Dit materiaal moet de gebruiker helpen de basiskenmerken te leren van het aanpassen van Bayesiaanse modellen met Stan, nadat hij vertrouwd is geraakt met de modellen in Waarschijnlijkheid en Bayesiaanse modellering zoals deze in het boek van Albert en Hu zijn beschreven."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Albert, Jim. 2020. “Bayesian Modeling Using Stan.” https://bayesball.github.io/BRMS/.\n\n\nAlbert, Jingchen, Jim & Hu. 2020. Probability and Bayesian\nModeling. Boca Raton: CRC Press."
  },
  {
    "objectID": "summary.html#installing-the-brms-package",
    "href": "summary.html#installing-the-brms-package",
    "title": "2  BRMS",
    "section": "2.1 Installing the brms package",
    "text": "2.1 Installing the brms package\nBasisinformatie over het installeren van brmspakket vind je hier.\nOmdat het pakket een interface is naar de Stan software, is een C++ compiler vereist.\n\n2.1.1 Een Bayesiaanse fittingfunctie brm()\nEen aantrekkelijke eigenschap van het brms-pakket is dat één functie brm() gebruikt kan worden om alle modellen te fitten die beschreven zijn in Probability and Bayesian Modeling.\nDe basis functie syntaxis van de brm() functie is:\nbrm(model_description, \n        data = my_data, \n        family = the_family,\n        prior = the_prior)\nwaar\n\nmodel_description is de beschrijving van het regressiemodel, inclusief eventuele willekeurige effecten, vergelijkbaar met de notatie die gebruikt wordt in de glm() en glmer functies;\n\nmy_data is het dataframe dat de data bevat;\n\nfamily is de samplingsfamilie (normaal, binomiaal, Poisson, etc);\n\nprior is de specificatie van de prior op de regressie termen en de error standaarddeviatie.\n\nDe output van de brm() functie is een object van de brmsfit die de posterior samples bevat en andere informatie over het model.\nHieronder volgen enkele voorbeelden uit Alberts tekst die voor mij duidelijk zijn, waarvan de syntax werkt en de data toegankelijk zijn."
  },
  {
    "objectID": "summary.html#laden-van-pakket",
    "href": "summary.html#laden-van-pakket",
    "title": "2  BRMS",
    "section": "2.2 Laden van pakket",
    "text": "2.2 Laden van pakket\nEerst maar eens de pakketten laden die we bij het draaien van de Bayesiaanse modellen gebruiken.\n\n# Zoals altijd: de pakket moeten wel geïnstalleerd zijn.\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.1.3\n\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n\n\nv ggplot2 3.3.6     v purrr   0.3.4\nv tibble  3.1.7     v dplyr   1.0.9\nv tidyr   1.2.0     v stringr 1.4.0\nv readr   2.1.2     v forcats 0.5.1\n\n\nWarning: package 'ggplot2' was built under R version 4.1.3\n\n\nWarning: package 'tibble' was built under R version 4.1.3\n\n\nWarning: package 'tidyr' was built under R version 4.1.3\n\n\nWarning: package 'readr' was built under R version 4.1.3\n\n\nWarning: package 'dplyr' was built under R version 4.1.3\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\nlibrary(brms)\n\nWarning: package 'brms' was built under R version 4.1.3\n\n\nLoading required package: Rcpp\n\n\nWarning: package 'Rcpp' was built under R version 4.1.3\n\n\nLoading 'brms' package (version 2.17.0). Useful instructions\ncan be found by typing help('brms'). A more detailed introduction\nto the package is available through vignette('brms_overview').\n\n\n\nAttaching package: 'brms'\n\n\nThe following object is masked from 'package:stats':\n\n    ar\n\nlibrary(bayesplot)\n\nWarning: package 'bayesplot' was built under R version 4.1.3\n\n\nThis is bayesplot version 1.9.0\n\n\n- Online documentation and vignettes at mc-stan.org/bayesplot\n\n\n- bayesplot theme set to bayesplot::theme_default()\n\n\n   * Does _not_ affect other ggplot2 plots\n\n\n   * See ?bayesplot_theme_set for details on theme setting\n\nlibrary(ProbBayes)\n\nWarning: package 'ProbBayes' was built under R version 4.1.3\n\n\nLoading required package: LearnBayes\n\n\n\nAttaching package: 'LearnBayes'\n\n\nThe following object is masked from 'package:brms':\n\n    rdirichlet\n\n\nLoading required package: gridExtra\n\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\n\nLoading required package: shiny\n\n\nWarning: package 'shiny' was built under R version 4.1.3"
  },
  {
    "objectID": "brms.html",
    "href": "brms.html",
    "title": "2  BRMS",
    "section": "",
    "text": "In Probability and Bayesian Modeling, wordt de JAGS software gebruikt om te illustreren hoe verschillende Bayesiaanse modellen met Markov Chain Monte Carlo (MCMC) methodes zijn te fitten. JAGS bestaat uit een mix van conjugatieve, Gibbs sampling en Metropolis algoritmes. De laatste jaren is de Hamiltoniaanse sampling methode en de daarmee geassocieerde Stan software populair geworden om Bayesiaanse modellen met MCMC-methodes te draaien.\nHet doel van het aanvullend supplement dat Albert heeft gemaakt is om duidelijk te maken hoe deze veel voorkomende Bayesiaanse statistische modellen zijn te fitten met gebruikmaking van het brms pakket, een populair interface naar Stan. Dit materiaal moet de gebruiker helpen de basiskenmerken te leren van het aanpassen van Bayesiaanse modellen met Stan, nadat hij vertrouwd is geraakt met de modellen in Waarschijnlijkheid en Bayesiaanse modellering zoals deze in het boek van Albert en Hu zijn beschreven."
  },
  {
    "objectID": "brms.html#installing-the-brms-package",
    "href": "brms.html#installing-the-brms-package",
    "title": "2  BRMS",
    "section": "2.1 Installing the brms package",
    "text": "2.1 Installing the brms package\nBasisinformatie over het installeren van brmspakket vind je hier.\nOmdat het pakket een interface is naar de Stan software, is een C++ compiler vereist.\n\n2.1.1 Een Bayesiaanse fittingfunctie brm()\nEen aantrekkelijke eigenschap van het brms-pakket is dat één functie brm() gebruikt kan worden om alle modellen te fitten die beschreven zijn in Probability and Bayesian Modeling.\nDe basis functie syntaxis van de brm() functie is:\nbrm(model_description, \n        data = my_data, \n        family = the_family,\n        prior = the_prior)\nwaar\n\nmodel_description is de beschrijving van het regressiemodel, inclusief eventuele willekeurige effecten, vergelijkbaar met de notatie die gebruikt wordt in de glm() en glmer functies;\n\nmy_data is het dataframe dat de data bevat;\n\nfamily is de samplingsfamilie (normaal, binomiaal, Poisson, etc);\n\nprior is de specificatie van de prior op de regressie termen en de error standaarddeviatie.\n\nDe output van de brm() functie is een object van de brmsfit die de posterior samples bevat en andere informatie over het model.\nHieronder volgen enkele voorbeelden uit Alberts tekst die voor mij duidelijk zijn, waarvan de syntax werkt en de data toegankelijk zijn."
  },
  {
    "objectID": "brms.html#laden-van-pakket",
    "href": "brms.html#laden-van-pakket",
    "title": "2  BRMS",
    "section": "2.2 Laden van pakket",
    "text": "2.2 Laden van pakket\nEerst maar eens de pakketten laden die we bij het draaien van de Bayesiaanse modellen gebruiken.\n\n# Zoals altijd: de pakket moeten wel geïnstalleerd zijn.\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.1.3\n\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n\n\nv ggplot2 3.3.6     v purrr   0.3.4\nv tibble  3.1.7     v dplyr   1.0.9\nv tidyr   1.2.0     v stringr 1.4.0\nv readr   2.1.2     v forcats 0.5.1\n\n\nWarning: package 'ggplot2' was built under R version 4.1.3\n\n\nWarning: package 'tibble' was built under R version 4.1.3\n\n\nWarning: package 'tidyr' was built under R version 4.1.3\n\n\nWarning: package 'readr' was built under R version 4.1.3\n\n\nWarning: package 'dplyr' was built under R version 4.1.3\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\nlibrary(brms)\n\nWarning: package 'brms' was built under R version 4.1.3\n\n\nLoading required package: Rcpp\n\n\nWarning: package 'Rcpp' was built under R version 4.1.3\n\n\nLoading 'brms' package (version 2.17.0). Useful instructions\ncan be found by typing help('brms'). A more detailed introduction\nto the package is available through vignette('brms_overview').\n\n\n\nAttaching package: 'brms'\n\n\nThe following object is masked from 'package:stats':\n\n    ar\n\nlibrary(bayesplot)\n\nWarning: package 'bayesplot' was built under R version 4.1.3\n\n\nThis is bayesplot version 1.9.0\n\n\n- Online documentation and vignettes at mc-stan.org/bayesplot\n\n\n- bayesplot theme set to bayesplot::theme_default()\n\n\n   * Does _not_ affect other ggplot2 plots\n\n\n   * See ?bayesplot_theme_set for details on theme setting\n\nlibrary(ProbBayes)\n\nWarning: package 'ProbBayes' was built under R version 4.1.3\n\n\nLoading required package: LearnBayes\n\n\n\nAttaching package: 'LearnBayes'\n\n\nThe following object is masked from 'package:brms':\n\n    rdirichlet\n\n\nLoading required package: gridExtra\n\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\n\nLoading required package: shiny\n\n\nWarning: package 'shiny' was built under R version 4.1.3"
  },
  {
    "objectID": "binominaal.html",
    "href": "binominaal.html",
    "title": "3  Binominale model",
    "section": "",
    "text": "# Zoals altijd: de pakket moeten wel geïnstalleerd zijn.\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.1.3\n\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n\n\nv ggplot2 3.3.6     v purrr   0.3.4\nv tibble  3.1.7     v dplyr   1.0.9\nv tidyr   1.2.0     v stringr 1.4.0\nv readr   2.1.2     v forcats 0.5.1\n\n\nWarning: package 'ggplot2' was built under R version 4.1.3\n\n\nWarning: package 'tibble' was built under R version 4.1.3\n\n\nWarning: package 'tidyr' was built under R version 4.1.3\n\n\nWarning: package 'readr' was built under R version 4.1.3\n\n\nWarning: package 'dplyr' was built under R version 4.1.3\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\nlibrary(brms)\n\nWarning: package 'brms' was built under R version 4.1.3\n\n\nLoading required package: Rcpp\n\n\nWarning: package 'Rcpp' was built under R version 4.1.3\n\n\nLoading 'brms' package (version 2.17.0). Useful instructions\ncan be found by typing help('brms'). A more detailed introduction\nto the package is available through vignette('brms_overview').\n\n\n\nAttaching package: 'brms'\n\n\nThe following object is masked from 'package:stats':\n\n    ar\n\nlibrary(bayesplot)\n\nWarning: package 'bayesplot' was built under R version 4.1.3\n\n\nThis is bayesplot version 1.9.0\n\n\n- Online documentation and vignettes at mc-stan.org/bayesplot\n\n\n- bayesplot theme set to bayesplot::theme_default()\n\n\n   * Does _not_ affect other ggplot2 plots\n\n\n   * See ?bayesplot_theme_set for details on theme setting\n\nlibrary(ProbBayes)\n\nWarning: package 'ProbBayes' was built under R version 4.1.3\n\n\nLoading required package: LearnBayes\n\n\n\nAttaching package: 'LearnBayes'\n\n\nThe following object is masked from 'package:brms':\n\n    rdirichlet\n\n\nLoading required package: gridExtra\n\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\n\nLoading required package: shiny\n\n\nWarning: package 'shiny' was built under R version 4.1.3"
  },
  {
    "objectID": "binominaal.html#voorbeeld",
    "href": "binominaal.html#voorbeeld",
    "title": "3  Binominale model",
    "section": "3.1 Voorbeeld",
    "text": "3.1 Voorbeeld\nStel dat een sample van \\(n=20\\) collegestudenten is gevraagd of zij van plan zijn een masker te dragen bij het volgen van een les. Laat \\(p\\) de proportie zijn van alle studenten die van plan zijn maskers te dragen.\n\n3.1.1 Prior voor proportie\nStel dat je gelooft dat \\(p=0.40\\) is en dat je er 90% zeker van bent dat \\(p<0.60\\).\nGebruik beta.select() van het ProbBayes-pakket om de parameters vast te stellen die matchen met de beta-curve prior.\n\nbeta.select(list(x = 0.4, p = 0.5),\n            list(x = 0.6, p = 0.9))\n\n[1] 4.31 6.30\n\n\nEen beta-prior van (4.31, 6.30) representeert iemand geloof in de proportie \\(p\\).\n\n\n3.1.2 Prior voor de logit parameter\nOmdat we het model in termen van een logit functie willen schrijven\n\\[\\theta=log\\frac{p}{1-p}\\]\nwillen we een corresponderende normaal prior op \\(\\theta\\) vinden.\nDit kan op een eenvoudige manier door een simulatie …\n\nSimuleer 1000 trekkingen van de beta prior op\n\\(p\\).\n\n\n\nComputeer \\(\\theta\\) op deze gesimuleerde trekkingen van \\(p\\).\n\nVind het sample gemiddelde en standaard deviatie van deze trekkingen – dit zijn schattingen van het gemiddelde en standaard deviatie van de normaal prior op \\(\\theta\\).\n\n\nset.seed(123)\np_sim <- rbeta(1000, 4.31, 6.30)\ntheta_sim <- log(p_sim / (1 - p_sim))\nc(mean(theta_sim), sd(theta_sim))\n\n[1] -0.4000904  0.6540093\n\n\nDe prior op de logit parameter \\(\\theta\\) wordt verondersteld normaal te zijn met een gemiddelde van −0.400 en standaard deviatie van 0.654.\n\n\n3.1.3 Fitten van het model\nHet model is \\(y_1,...,y_20\\), een random sample van een Bernoulli distributie met waarschijnlijkheid \\(p\\) waarbij \\(p\\) logistische representatie heeft.\n\\[log(\\frac{p}{1-p}=\\theta)\\] waar \\(\\theta \\tilde N(-0.400,0.654)\\)\nWe zetten twintig binaire antwoorden in een dataframe.\n\nbdata <- data.frame(y = c(1, 0, 1, 0, 0, 0, 1, \n0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0))\n\nWe gebruiken de brm() functie van het brms pakket om het model te fitten.\n\nfit <- brm(data = bdata, \n            family = bernoulli,\n            y  ~ 0 + Intercept,\n            prior = c(prior(normal(-0.400, 0.654), \n                           coef = Intercept)),\n            iter = 1000,\n            refresh = 0)\n\nCompiling Stan program...\n\n\nStart sampling\n\n\nDe plot() functie laat een densityplot zien en een traceplot van het intercept \\(\\theta\\).\n\nplot(fit)\n\n\n\n\nDe summary functie biedt samenvattende statistieken voor \\(\\theta\\).\n\nsummary(fit)\n\n Family: bernoulli \n  Links: mu = logit \nFormula: y ~ 0 + Intercept \n   Data: bdata (Number of observations: 20) \n  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;\n         total post-warmup draws = 2000\n\nPopulation-Level Effects: \n          Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nIntercept    -0.56      0.39    -1.29     0.17 1.01      683     1111\n\nDraws were sampled using sampling(NUTS). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n\n\nDe posterior_samples() functie biedt ons de gesimuleerde trekkingen van \\(\\theta\\).\n\npost <- posterior_samples(fit)\n\nWarning: Method 'posterior_samples' is deprecated. Please see ?as_draws for\nrecommended alternatives.\n\nhead(post)\n\n  b_Intercept     lprior      lp__\n1  -0.3644463 -0.4957683 -13.59560\n2  -0.4101897 -0.4944120 -13.54451\n3  -0.5691618 -0.5277424 -13.48236\n4   0.3479299 -1.1482281 -16.35609\n5   0.5788760 -1.6144244 -18.04030\n6   0.5842953 -1.6268613 -18.08432\n\n\n\n\n3.1.4 Inferenties over de proportie\nOm een sample trekkingen te krijgen van de posterior distributie van \\(p\\), kan men de inverse logit transformatie gebruiken op de gesimuleerde trekkingen van \\(\\theta\\).\n\\[p=\\frac{exp(\\theta)}{1+exp(\\theta)}\\]\n\npost %>% \n  mutate(p = exp(b_Intercept) / (1 + exp(b_Intercept))) -> post\n\nDe posterior dichtheid voor \\(p\\) wordt gevonden door een dichtheidsplot te construeren van de gesimuleerde trekkingen van \\(p\\).\n\nggplot(post, aes(p)) +\n  geom_density()\n\n\n\n\nEen 90% posterior interval schatting kan gevonden worden door quantielen te definiëren van de gesimuleerde waarden van \\(p\\).\n\nquantile(post$p, c(.05, .95))\n\n       5%       95% \n0.2378038 0.5192776"
  },
  {
    "objectID": "normaal.html",
    "href": "normaal.html",
    "title": "4  Normaal modelleren",
    "section": "",
    "text": "4.0.1 Normaal samplingsmodel\nStel dat \\(y_1,...,y_n\\) een sample is van een normale distributie met gemiddelde \\(\\mu\\) en standaard deviatie \\(\\sigma\\).\nVoor een prior nemen we aan dat \\(\\mu\\) en \\(\\sigma\\) onafhankelijk zijn met \\(\\mu\\) als een normale prior en \\(\\sigma\\) met een uniforme prior op een interval.\n\n\n4.0.2 Data en prior\nWe kijken naar de variable time (tijd) van de dataset federer_time_to_serve die de tijd tot de service omvat voor 20 serves van Roger Federer.\nWe plaatsen een zwak informatieve prior op de parameters. We nemen aan datde gemiddelde tijd-tot-service \\(\\mu\\) N(15, 5) is en gaan uit van een standard deviatie \\(\\sigma\\) die uniform is op het interval (0, 20).\n\n\n4.0.3 Bayesiaans fitten\nWe gebruiken de brm() functie met de family = gaussian optie. Let op hoe de prior gespecificeerd is door het prior argument.\n\nfit <- brm(data = federer_time_to_serve, \n            family = gaussian,\n            time ~ 1,\n    prior = c(prior(normal(15, 5), class = Intercept),\n              prior(uniform(0, 20), class = sigma)),\n    iter = 1000, refresh = 0, chains = 4)\n\nWarning: It appears as if you have specified an upper bounded prior on a parameter that has no natural upper bound.\nIf this is really what you want, please specify argument 'ub' of 'set_prior' appropriately.\nWarning occurred for prior \n<lower=0> sigma ~ uniform(0, 20)\n\n\nCompiling Stan program...\n\n\nStart sampling\n\n\nJe krijgt densityplots en traceplots voor \\(\\mu\\) en \\(\\sigma\\) met de plot() functie.\n\nplot(fit)\n\n\n\n\nJe krijgt posteriorsamenvattingen voor elke parameter met de summary() functie.\n\nsummary(fit)\n\n Family: gaussian \n  Links: mu = identity; sigma = identity \nFormula: time ~ 1 \n   Data: federer_time_to_serve (Number of observations: 20) \n  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;\n         total post-warmup draws = 2000\n\nPopulation-Level Effects: \n          Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nIntercept    17.15      0.82    15.44    18.65 1.00     1474     1155\n\nFamily Specific Parameters: \n      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nsigma     3.67      0.67     2.64     5.23 1.00     1264     1071\n\nDraws were sampled using sampling(NUTS). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n\n\nJe kunt een matrix van gesimiuleerde trekkingen krijgen met de posterior_samples() functie.\n\npost <- posterior_samples(fit)\n\nWarning: Method 'posterior_samples' is deprecated. Please see ?as_draws for\nrecommended alternatives.\n\nhead(post)\n\n  b_Intercept    sigma    lprior      lp__\n1    17.40359 3.214840 -5.639653 -56.99985\n2    17.00461 3.332313 -5.604478 -56.89602\n3    16.16764 3.541699 -5.551376 -57.66760\n4    18.37007 3.675222 -5.751256 -58.10243\n5    17.79943 3.941580 -5.680845 -57.50463\n6    17.90712 3.281274 -5.693136 -57.43523"
  },
  {
    "objectID": "poisson.html",
    "href": "poisson.html",
    "title": "5  Poisson modelleren",
    "section": "",
    "text": "# Zoals altijd: de pakket moeten wel geïnstalleerd zijn.\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.1.3\n\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n\n\nv ggplot2 3.3.6     v purrr   0.3.4\nv tibble  3.1.7     v dplyr   1.0.9\nv tidyr   1.2.0     v stringr 1.4.0\nv readr   2.1.2     v forcats 0.5.1\n\n\nWarning: package 'ggplot2' was built under R version 4.1.3\n\n\nWarning: package 'tibble' was built under R version 4.1.3\n\n\nWarning: package 'tidyr' was built under R version 4.1.3\n\n\nWarning: package 'readr' was built under R version 4.1.3\n\n\nWarning: package 'dplyr' was built under R version 4.1.3\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\nlibrary(brms)\n\nWarning: package 'brms' was built under R version 4.1.3\n\n\nLoading required package: Rcpp\n\n\nWarning: package 'Rcpp' was built under R version 4.1.3\n\n\nLoading 'brms' package (version 2.17.0). Useful instructions\ncan be found by typing help('brms'). A more detailed introduction\nto the package is available through vignette('brms_overview').\n\n\n\nAttaching package: 'brms'\n\n\nThe following object is masked from 'package:stats':\n\n    ar\n\nlibrary(bayesplot)\n\nWarning: package 'bayesplot' was built under R version 4.1.3\n\n\nThis is bayesplot version 1.9.0\n\n\n- Online documentation and vignettes at mc-stan.org/bayesplot\n\n\n- bayesplot theme set to bayesplot::theme_default()\n\n\n   * Does _not_ affect other ggplot2 plots\n\n\n   * See ?bayesplot_theme_set for details on theme setting\n\nlibrary(ProbBayes)\n\nWarning: package 'ProbBayes' was built under R version 4.1.3\n\n\nLoading required package: LearnBayes\n\n\n\nAttaching package: 'LearnBayes'\n\n\nThe following object is masked from 'package:brms':\n\n    rdirichlet\n\n\nLoading required package: gridExtra\n\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\n\nLoading required package: shiny\n\n\nWarning: package 'shiny' was built under R version 4.1.3"
  },
  {
    "objectID": "poisson.html#poisson-modelleren",
    "href": "poisson.html#poisson-modelleren",
    "title": "5  Poisson modelleren",
    "section": "5.1 Poisson Modelleren",
    "text": "5.1 Poisson Modelleren\nHier observeren we tellingen \\(y_1,...,y_n\\) verdeeld volgens een Poisson distributie met gemiddelde \\(\\lambda\\).\nSchrijf het model in termen van het logaritme van het gemiddelde:\n\\[\\theta=log\\lambda\\] is het model met \\(N(\\mu,\\sigma)\\) prior op de log gemiddelde parameter \\(\\theta\\)."
  },
  {
    "objectID": "poisson.html#leren-over-website-tellingen",
    "href": "poisson.html#leren-over-website-tellingen",
    "title": "5  Poisson modelleren",
    "section": "5.2 Leren over website tellingen",
    "text": "5.2 Leren over website tellingen\nIn het ProbBayes pakket, omvat de variabele Count in de dataset web_visits tellingen van dagelijkse bezoeken aan een blog_website. We zijn geïnteresseerd in leren van het gemiddelde aantal bezoeken \\(\\lambda\\).\nWe plaatsen een \\(N(0, 10)\\) prior op \\(\\theta=log\\lambda\\) die de beperkte informatie van de prior over de lokatie van deze parameter uitdrukt.\n\n5.2.1 Bayesiaans fitten\nIn deze run van de brm() functie gaan we uit van Poisson sampling en een normaal prior met gemiddelde 0 en standaard deviatie 10 geplaatst op het loggemiddelde \\(\\theta=log\\lambda\\).\n\nfit <- brm(Count ~ 0 + Intercept, \n            data = web_visits,\n            family = poisson,\n             refresh = 0,\n           prior = prior(normal(0, 10), \n                         class = b,\n                         coef = \"Intercept\"))\n\nCompiling Stan program...\n\n\nStart sampling\n\n\nWe bevestigen de prior met de prior_summary() functie.\n\nprior_summary(fit)\n\n         prior class      coef group resp dpar nlpar lb ub  source\n        (flat)     b                                       default\n normal(0, 10)     b Intercept                                user\n\n\nDe summary() functie geeft de samenvattingen van de posterior van \\(\\theta\\).\n\nsummary(fit)\n\n Family: poisson \n  Links: mu = log \nFormula: Count ~ 0 + Intercept \n   Data: web_visits (Number of observations: 28) \n  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;\n         total post-warmup draws = 4000\n\nPopulation-Level Effects: \n          Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nIntercept     4.58      0.02     4.54     4.62 1.00     1431     1936\n\nDraws were sampled using sampling(NUTS). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n\n\nDe posterior_samples() functie geeft de posterior simulaties van \\(\\theta\\).\n\npost <- posterior_samples(fit)\n\nWarning: Method 'posterior_samples' is deprecated. Please see ?as_draws for\nrecommended alternatives.\n\nhead(post)\n\n  b_Intercept    lprior      lp__\n1    4.615509 -3.328038 -136.9109\n2    4.600793 -3.327360 -135.9627\n3    4.608702 -3.327724 -136.3967\n4    4.601794 -3.327406 -136.0080\n5    4.567200 -3.325820 -136.0463\n6    4.562010 -3.325583 -136.3331\n\n\n\n\n5.2.2 Posterior predictieve model checks\nFeitelijk is dit een slecht model voor deze gegevens. Men kan dat zien door verschillende posterior predictive checks.\nDe pp_check() toont dichtheidsplots van 10 gerepliceerde datasets van de posterior voorspellende verdeling. Merk op dat deze gerepliceerde datasets er anders uitzien (kleinere variatie) dan de geobserveerde data.\n\npp_check(fit)\n\nUsing 10 posterior draws for ppc type 'dens_overlay' by default.\n\n\n\n\n\nDe pp_check() functie zal een posterior voorspellende controle implementeren met behulp van verschillende controle functies. Hier gebruiken we \\((y^_,s)\\) als een bivariate controlefunctie. De scatterplot geeft de waarden van \\((y^_,s)\\) weer. Hieruit blijkt dat de waargenomen gegevens meer variatie vertonen dan het Poisson model voorspelt.\n\npp_check(fit, type = \"stat_2d\")\n\nUsing all posterior draws for ppc type 'stat_2d' by default."
  },
  {
    "objectID": "proporties.html",
    "href": "proporties.html",
    "title": "6  Proporties",
    "section": "",
    "text": "# Zoals altijd: de pakket moeten wel geïnstalleerd zijn.\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.1.3\n\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n\n\nv ggplot2 3.3.6     v purrr   0.3.4\nv tibble  3.1.7     v dplyr   1.0.9\nv tidyr   1.2.0     v stringr 1.4.0\nv readr   2.1.2     v forcats 0.5.1\n\n\nWarning: package 'ggplot2' was built under R version 4.1.3\n\n\nWarning: package 'tibble' was built under R version 4.1.3\n\n\nWarning: package 'tidyr' was built under R version 4.1.3\n\n\nWarning: package 'readr' was built under R version 4.1.3\n\n\nWarning: package 'dplyr' was built under R version 4.1.3\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\nlibrary(brms)\n\nWarning: package 'brms' was built under R version 4.1.3\n\n\nLoading required package: Rcpp\n\n\nWarning: package 'Rcpp' was built under R version 4.1.3\n\n\nLoading 'brms' package (version 2.17.0). Useful instructions\ncan be found by typing help('brms'). A more detailed introduction\nto the package is available through vignette('brms_overview').\n\n\n\nAttaching package: 'brms'\n\n\nThe following object is masked from 'package:stats':\n\n    ar\n\nlibrary(bayesplot)\n\nWarning: package 'bayesplot' was built under R version 4.1.3\n\n\nThis is bayesplot version 1.9.0\n\n\n- Online documentation and vignettes at mc-stan.org/bayesplot\n\n\n- bayesplot theme set to bayesplot::theme_default()\n\n\n   * Does _not_ affect other ggplot2 plots\n\n\n   * See ?bayesplot_theme_set for details on theme setting\n\nlibrary(ProbBayes)\n\nWarning: package 'ProbBayes' was built under R version 4.1.3\n\n\nLoading required package: LearnBayes\n\n\n\nAttaching package: 'LearnBayes'\n\n\nThe following object is masked from 'package:brms':\n\n    rdirichlet\n\n\nLoading required package: gridExtra\n\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\n\nLoading required package: shiny\n\n\nWarning: package 'shiny' was built under R version 4.1.3"
  },
  {
    "objectID": "proporties.html#proporties-vergelijken",
    "href": "proporties.html#proporties-vergelijken",
    "title": "6  Proporties",
    "section": "6.1 Proporties vergelijken",
    "text": "6.1 Proporties vergelijken\n\n6.1.1 Facebook gebruik, voorbeeld\nIn Hoofdstuk 9 van Alberts en Hu’s boek vergelijken ze de volgende proporties. Een sample studenten is gevraagd naar hun geslacht en het gemiddeld aantal keren dat ze op een dag Facebook bezoeken.\nVan de \\(n_M\\) mannen in de sample had \\(y_M\\) een hoog aantal Facebook bezoeken en van de \\(n_F\\) vrouwen in de sample had \\(y_F\\) een hoog aantal bezoeken.\nStel dat de data zijn georganiseerd als het volgende dataframe:\n|—— | ———– | —— | | Geslacht| Sample-omva | bezoek | | mann | \\(n_m\\) | $y_m | | vro | \\(n_f\\) | \\(y_f\\) |\n\n\n6.1.2 Sampling model\nStel dat we twee onafhankelijke samples hebben waarbij \\(y_M\\) binomial(\\(n_M\\) is, \\(p_M\\)) en \\(y_F\\) is binomial(\\(n_F\\),\\(p_F\\)).\nSchrijf de proporties met eem logistisch model:\n\\[log(\\frac{p}{1-p})=\\beta_o + \\beta_1I(Geslacht=Man)\\]\nVoor vrouwen is de logit van \\(p_f\\) als volgt:\n\\[log(\\frac{p}{1-p})=\\beta_0\\]\nen voor mannen is de logit van \\(p_m\\) als\n\\[log(\\frac{p}{1-p})=\\beta_0 +\\beta_1\\]\n\n\n6.1.3 De data\nHier zijn de geobserveerde data:\n\nfb_data <- data.frame(Gender = c(\"male\", \"female\"),\n                      Sample_Size = c(93, 151),\n                      Visits = c(39, 75))\n\n\n\n6.1.4 Priors\nIn dit model is \\(\\beta_0\\) de logit van het aandeel vrouwen dat veel Facebook gebruikt en \\(\\beta_1\\) het verschil in de logits van de proporties voor mannen en vrouwen.\nVeronderstel dat je niet veel weet over de locatie van \\(beta_0\\), maar je denkt dat mannen en vrouwen gelijkaardig zijn in hun gebruik van Facebook. Dus je kent u een N(0, 31.6) toe aan \\(\\beta_0\\) met een hoge standaardafwijking, wat weinig kennis weergeeft. Om de overtuiging weer te geven dat \\(\\beta_1\\) dicht bij 0 ligt, gebruik je een \\(N(0, 0.71)\\) prior.\nDe get_prior() functie geeft een lijst van alle parameters om priors op te definiëren voor dit specifieke model, en kent het resultaat toe aan de prior. Dan worden de twee componenten van de prior toegewezen die de bovenstaande verklaringen weergeven.\n\n(my_prior <- get_prior(family = binomial,\n           Visits | trials(Sample_Size) ~ Gender,\n           data = fb_data))\n\n                prior     class       coef group resp dpar nlpar lb ub\n               (flat)         b                                       \n               (flat)         b Gendermale                            \n student_t(3, 0, 2.5) Intercept                                       \n       source\n      default\n (vectorized)\n      default\n\n\n\n\n6.1.5 Posterior sampling\nHieronder wordt brm() gebruikt met de priorspecificatie in my_prior.\n\nfit <- brm(family = binomial,\n           Visits | trials(Sample_Size) ~ Gender,\n           data = fb_data,\n           prior = my_prior,\n           iter = 1000,\n           refresh = 0)\n\nCompiling Stan program...\n\n\nStart sampling\n\n\nJe krijgt dan de matrix van gesimuleerde waarden van de parameters met de posterior_samples() functie.\n\npost <- posterior_samples(fit)\n\nWarning: Method 'posterior_samples' is deprecated. Please see ?as_draws for\nrecommended alternatives.\n\nhead(post)\n\n  b_Intercept b_Gendermale    lprior      lp__\n1  0.16332013  -0.54593019 -1.918462 -7.761008\n2  0.12150366  -0.66957414 -1.922026 -8.035865\n3 -0.22158118  -0.42867963 -1.937347 -9.141757\n4  0.18369978  -0.28234414 -1.917372 -8.454568\n5 -0.01250256   0.04040585 -1.917186 -8.568260\n6 -0.07541250  -0.14431879 -1.919501 -7.337328\n\n\nDe plot() functie geeft de traceplots en densityplots van elke parameter.\n\nplot(fit)\n\n\n\n\nPosterior samenvattingen krijg je met de print() functie.\n\nprint(fit)\n\n Family: binomial \n  Links: mu = logit \nFormula: Visits | trials(Sample_Size) ~ Gender \n   Data: fb_data (Number of observations: 2) \n  Draws: 4 chains, each with iter = 1000; warmup = 500; thin = 1;\n         total post-warmup draws = 2000\n\nPopulation-Level Effects: \n           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nIntercept     -0.02      0.17    -0.37     0.30 1.00     1806     1206\nGendermale    -0.31      0.27    -0.83     0.22 1.00     1566     1442\n\nDraws were sampled using sampling(NUTS). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1)."
  },
  {
    "objectID": "verhoudingen.html",
    "href": "verhoudingen.html",
    "title": "7  Verhoudingen",
    "section": "",
    "text": "# Zoals altijd: de pakket moeten wel geïnstalleerd zijn.\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.1.3\n\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n\n\nv ggplot2 3.3.6     v purrr   0.3.4\nv tibble  3.1.7     v dplyr   1.0.9\nv tidyr   1.2.0     v stringr 1.4.0\nv readr   2.1.2     v forcats 0.5.1\n\n\nWarning: package 'ggplot2' was built under R version 4.1.3\n\n\nWarning: package 'tibble' was built under R version 4.1.3\n\n\nWarning: package 'tidyr' was built under R version 4.1.3\n\n\nWarning: package 'readr' was built under R version 4.1.3\n\n\nWarning: package 'dplyr' was built under R version 4.1.3\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\nlibrary(brms)\n\nWarning: package 'brms' was built under R version 4.1.3\n\n\nLoading required package: Rcpp\n\n\nWarning: package 'Rcpp' was built under R version 4.1.3\n\n\nLoading 'brms' package (version 2.17.0). Useful instructions\ncan be found by typing help('brms'). A more detailed introduction\nto the package is available through vignette('brms_overview').\n\n\n\nAttaching package: 'brms'\n\n\nThe following object is masked from 'package:stats':\n\n    ar\n\nlibrary(bayesplot)\n\nWarning: package 'bayesplot' was built under R version 4.1.3\n\n\nThis is bayesplot version 1.9.0\n\n\n- Online documentation and vignettes at mc-stan.org/bayesplot\n\n\n- bayesplot theme set to bayesplot::theme_default()\n\n\n   * Does _not_ affect other ggplot2 plots\n\n\n   * See ?bayesplot_theme_set for details on theme setting\n\nlibrary(ProbBayes)\n\nWarning: package 'ProbBayes' was built under R version 4.1.3\n\n\nLoading required package: LearnBayes\n\n\n\nAttaching package: 'LearnBayes'\n\n\nThe following object is masked from 'package:brms':\n\n    rdirichlet\n\n\nLoading required package: gridExtra\n\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\n\nLoading required package: shiny\n\n\nWarning: package 'shiny' was built under R version 4.1.3"
  },
  {
    "objectID": "verhoudingen.html#verhoudingen-vergelijken",
    "href": "verhoudingen.html#verhoudingen-vergelijken",
    "title": "7  Verhoudingen",
    "section": "7.1 Verhoudingen vergelijken",
    "text": "7.1 Verhoudingen vergelijken\n\n7.1.1 Vergelijken van twee Poisson verhoudingen\nStel we vergelijken twee onafhankelijke samples: \\(x_1,...,x_m\\) is een random sample van een Poisson distributie met gemiddelde \\(\\lambda_x\\), en \\(w_1,...,w_n\\) is een random sample van een Poisson distributie met gemiddelde \\(\\lambda_y\\). We willen van de ratio van de Poisson gemiddelde \\[\\theta=\\frac{\\lambda_x}{\\lambda_y}\\] leren\n\n\n7.1.2 Schrijf het als een log-lineair model\nStel we verzamelen de observaties\n\\[y=c(x_1, ...,X_m,W_1...,w_n)\\]\nen laat group2een indicatorvariabele zijn voor de tweede groep.\n\\[group2=c(0,0,...,0,1,1,...,1)\\]\nDan representeren we het model als\n\\[u_1,...,y_m+n\\]\nonafhankelijk van de Poisson-distributies met gemiddelden \\(\\lambda_1,..., \\lambda_m_n\\)$ waarbij de gemiddelden een log-lineair model volgen van\n\\[log\\lambda_j=\\beta_0 + \\beta_1group2\\]\nIn dit model hebben we \\(\\beta_0=log\\lambda_x\\), en \\(\\beta_0+\\beta_1=log\\lambda_y\\). Dus \\(\\beta_1=log(\\lambda_y)-log(\\lambda_x)\\) representeert de toename van het gemiddelde op de log schaal.\n\n\n7.1.3 De data\nWe verzamelen aantallen webbezoeken voor een aantal dagen opgeslagen in het dataframe web_visits in het ProbBayes pakket. De sleutelvariabelen zijn Day, de dag van de week, en Count, het aantal websitebezoeken. We definiëren een nieuwe variabele Type dat is of “weekend” of “dag door de week”.\nWe zijn geïnteresseerd in het vergelijken van gemiddelde bezoeken in het week of op andere anderen in de week.\n\nweb_visits %>% \n  mutate(Type = ifelse(Day %in% \n      c(\"Fri\", \"Sat\", \"Sun\"), \"weekend\", \"weekday\")) -> web_visits\n\n\n\n7.1.4 Priors\nHier gaan we uit van zwak informatieve priors op de regressie parameters \\(\\beta_0\\) en \\(\\beta_1\\).\n\n\n7.1.5 Bayesiaans fitten\n\nfit <- brm(Count ~ Type,\n           family = poisson,\n           data = web_visits,\n           refresh = 0)\n\nCompiling Stan program...\n\n\nStart sampling\n\n\n\nplot(fit)\n\n\n\n\n\nsummary(fit)\n\n Family: poisson \n  Links: mu = log \nFormula: Count ~ Type \n   Data: web_visits (Number of observations: 28) \n  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;\n         total post-warmup draws = 4000\n\nPopulation-Level Effects: \n            Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nIntercept       4.69      0.02     4.64     4.74 1.00     3181     2334\nTypeweekend    -0.27      0.04    -0.34    -0.19 1.00     2885     2463\n\nDraws were sampled using sampling(NUTS). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1)."
  },
  {
    "objectID": "multilevel.html",
    "href": "multilevel.html",
    "title": "8  Multilevel",
    "section": "",
    "text": "Ook hier eerst maar eens de pakketten laden die we bij het draaien van de Bayesiaanse modellen gebruiken.\n\n# Zoals altijd: de pakket moeten wel geïnstalleerd zijn.\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.1.3\n\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n\n\nv ggplot2 3.3.6     v purrr   0.3.4\nv tibble  3.1.7     v dplyr   1.0.9\nv tidyr   1.2.0     v stringr 1.4.0\nv readr   2.1.2     v forcats 0.5.1\n\n\nWarning: package 'ggplot2' was built under R version 4.1.3\n\n\nWarning: package 'tibble' was built under R version 4.1.3\n\n\nWarning: package 'tidyr' was built under R version 4.1.3\n\n\nWarning: package 'readr' was built under R version 4.1.3\n\n\nWarning: package 'dplyr' was built under R version 4.1.3\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\nlibrary(brms)\n\nWarning: package 'brms' was built under R version 4.1.3\n\n\nLoading required package: Rcpp\n\n\nWarning: package 'Rcpp' was built under R version 4.1.3\n\n\nLoading 'brms' package (version 2.17.0). Useful instructions\ncan be found by typing help('brms'). A more detailed introduction\nto the package is available through vignette('brms_overview').\n\n\n\nAttaching package: 'brms'\n\n\nThe following object is masked from 'package:stats':\n\n    ar\n\nlibrary(bayesplot)\n\nWarning: package 'bayesplot' was built under R version 4.1.3\n\n\nThis is bayesplot version 1.9.0\n\n\n- Online documentation and vignettes at mc-stan.org/bayesplot\n\n\n- bayesplot theme set to bayesplot::theme_default()\n\n\n   * Does _not_ affect other ggplot2 plots\n\n\n   * See ?bayesplot_theme_set for details on theme setting\n\nlibrary(ProbBayes)\n\nWarning: package 'ProbBayes' was built under R version 4.1.3\n\n\nLoading required package: LearnBayes\n\n\n\nAttaching package: 'LearnBayes'\n\n\nThe following object is masked from 'package:brms':\n\n    rdirichlet\n\n\nLoading required package: gridExtra\n\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\n\nLoading required package: shiny\n\n\nWarning: package 'shiny' was built under R version 4.1.3"
  },
  {
    "objectID": "multilevel.html#multilevel-modeleren-met-proportions",
    "href": "multilevel.html#multilevel-modeleren-met-proportions",
    "title": "8  Multilevel",
    "section": "8.2 Multilevel modeleren met proportions",
    "text": "8.2 Multilevel modeleren met proportions\n\n8.2.1 Ziekenhuis study\nTabel 10.2 geeft aantal gevallen en het aantal doden bij een hartaanval voor 13 ziekenhuizen in New York. Deze data zitten in het dataframe DeathHeartAttackManhattan in het ProbBayes pakket.\n\n\n8.2.2 Een multilevel model\nWe gaan uit van een hierarchisch model zoals beschreven in Sectie 10.3.\nSampling\nWe nemen eerst aan dat \\(yj\\), het aantal sterfgevallen in het \\(jde\\) ziekenhuis, binomiaal is met steekproefgrootte #\\(n_j\\) en waarschijnlijkheid \\(p_j\\). Laat \\(j_theta_j=log(\\frac{p_j}{(1-p_j))\\) de logit voor het \\(jde\\) ziekenhuis.\nSchrijf \\(\\theta_j=\\beta+\\gamma_j\\).\nPrior\n\nWe nemen aan dat het intercept \\(beta\\) een student-t distributie heeft met gemiddelde 0, schaalparameter 2,5 en 3 vrijheidsgraden. We nemen aan dat \\(gamma_i,....,\\gamma_N\\) normaal verdeeld zijn met gemiddelde 0 en standaardafwijking \\(\\sigma\\).\n\nDe standaardafwijking \\(\\sigma\\) wordt verondersteld een t-dichtheid te hebben met gemiddelde 0 en standaardafwijking 3.5.\n\n\n\n8.2.3 Fitten van het Bayesiaanse model\nWe fitten het multilevelmodel met de brm() functie. Let op het gebruik van het “family = binomial” argument om de steekproefverdeling aan te geven. De component “(1|)” geeft aan dat de \\(gamma_j\\) een willekeurige verdeling heeft.\n\nfit <- brm(data = DeathHeartAttackManhattan, \n           family = binomial,\n           Deaths | trials(Cases) ~ 1 + (1 | Hospital),\n           refresh = 0)\n\nCompiling Stan program...\n\n\nStart sampling\n\n\nWe hebben geen priors opgegeven, maar er zijn standaard priors achter de schermen. De prior_summary() functie toont de priors.\n\nprior_summary(fit)\n\n                prior     class      coef    group resp dpar nlpar lb ub\n student_t(3, 0, 2.5) Intercept                                         \n student_t(3, 0, 2.5)        sd                                     0   \n student_t(3, 0, 2.5)        sd           Hospital                  0   \n student_t(3, 0, 2.5)        sd Intercept Hospital                  0   \n       source\n      default\n      default\n (vectorized)\n (vectorized)\n\n\n\n\n8.2.4 Posterior samenvattingen van \\(\\beta\\) en \\(\\sigma\\)\nDe summary() functie toont posterior samenvattingen van \\(beta\\) (het intercept) en de standaardafwijking \\(\\sigma\\).\n\nsummary(fit)\n\n Family: binomial \n  Links: mu = logit \nFormula: Deaths | trials(Cases) ~ 1 + (1 | Hospital) \n   Data: DeathHeartAttackManhattan (Number of observations: 13) \n  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;\n         total post-warmup draws = 4000\n\nGroup-Level Effects: \n~Hospital (Number of levels: 13) \n              Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nsd(Intercept)     0.19      0.14     0.01     0.52 1.00     1201     1928\n\nPopulation-Level Effects: \n          Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nIntercept    -2.60      0.11    -2.81    -2.38 1.00     2820     2247\n\nDraws were sampled using sampling(NUTS). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n\n\n\n\n8.2.5 Posterior samenvattingen van ziekenhuis effecten\nDe posterior_samples() functie produceert een grote matrix van gesimuleerde trekkingen waarbij de kolom overeenkomt met de parameter en de rij correspondeert met het iteratie nummer.\nDoor gebruik te maken van de pivot_longer() functie, formatteer ik de simulatie matrix waarbij er een nieuwe variabele Hospital is die de naam van het ziekenhuis en Effect is de gesimuleerde waarde van \\(\\gamma_y\\). Ook heb ik een nieuwe variabele aan die het nummer van het ziekenhuis is, van 1 tot 13.\n\nposterior_samples(fit) %>% \n  pivot_longer(starts_with(\"r_Hospital\"),\n               names_to = \"Hospital\",\n               values_to = \"Effect\") -> post\n\nWarning: Method 'posterior_samples' is deprecated. Please see ?as_draws for\nrecommended alternatives.\n\npost$Hospital_No <- as.character(as.numeric(factor(post$Hospital)))\n\nHieronder zie je een grafiek van de posterior verdeling van de parameters voor alle 13 ziekenhuizen.\nDeze zijn gegraveerd op de logit schaal. Door de inverse logit functie te nemen, kan men de posterior verdelingen van de sterftecijfers vinden \\(p_1,....,p_N\\).\n\nggplot(post, aes(Hospital_No, Effect + b_Intercept)) +\n  geom_boxplot() +\n  coord_flip()"
  },
  {
    "objectID": "multilevel.html#multilevel-modeleren-van-gemiddelden",
    "href": "multilevel.html#multilevel-modeleren-van-gemiddelden",
    "title": "8  Multilevel",
    "section": "8.3 Multilevel modeleren van gemiddelden",
    "text": "8.3 Multilevel modeleren van gemiddelden\n\n8.3.1 Studie over filmbeoordelingen\nTabel 10.1 geeft samenvattingen van de beoordelingen voor acht verschillende animatiefilms. De tabel bevat het aantal beoordelingen, het gemiddelde en de standaardafwijking van de beoordelingen. De gegevens staan in het dataframe animation_rating in het ProbBayes pakket.\n\n\n8.3.2 Het multilevel model\nSampling\nLaat \\(Y_ij\\) de waardering van het \\(ide\\) individu voor de \\(jde\\) film.\nWe gaan uit van \\(y_ij∼N(\\mu, \\sigma)\\).\nPrior\nDe parameters \\(\\mu_1,...,\\mu_8\\) vertegenwoordigen de gemiddelde ratings voor de acht films. Schrijf\n\\[\\mu_j=\\beta+\\gamma_j\\]\n\nDe intercept-parameter \\(\\beta\\) heeft een student t-distributie met gemiddelde 4, schaalparameter 2.5, en 3 vrijheidsgraden.\n\nWe nemen aan dat de effectparameters \\(gamma_1,...,\\gamma_8\\) een normale verdeling hebben met gemiddelde 0 en standaardafwijking \\(τ\\).\n\nEr zijn twee standaardafwijkingen, de samplingstandaardafwijking \\(\\sigma\\) en de tussen-gemiddelde standaardafwijking \\(τ\\). Elk van deze standaardafwijkingen krijgen zwak informatieve student t-verdelingen met gemiddelde 0, schaal 2,5 en 3 vrijheidsgraden.\n\n\n\n8.3.3 Bayesiaans fitten\nHet model wordt gefit door gebruik te maken van de brm() functie. Standaard gaat deze functie standaard uit van een Gaussische (normale) steekproefverdeling. Het argument “(1|movieID)” argument geeft aan dat de `brmu_1,…,_8$ een willekeurige verdeling hebben.\n\nfit <- brm(rating ~ (1 | movieId),\n           data = animation_ratings,\n           refresh = 0)\n\nCompiling Stan program...\n\n\nStart sampling\n\n\nWarning: There were 1 divergent transitions after warmup. See\nhttps://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup\nto find out why this is a problem and how to eliminate them.\n\n\nWarning: Examine the pairs() plot to diagnose sampling problems\n\n\nMen kan de standaard priors controleren met behulp van de prior_summary() functie.\n\nprior_summary(fit)\n\n                prior     class      coef   group resp dpar nlpar lb ub\n student_t(3, 4, 2.5) Intercept                                        \n student_t(3, 0, 2.5)        sd                                    0   \n student_t(3, 0, 2.5)        sd           movieId                  0   \n student_t(3, 0, 2.5)        sd Intercept movieId                  0   \n student_t(3, 0, 2.5)     sigma                                    0   \n       source\n      default\n      default\n (vectorized)\n (vectorized)\n      default\n\n\nDe posterior matrix van gesimuleerde trekkingen is beschikbaar door gebruik te maken van de posterior_samples() functie. Hieronder construeer ik dichtheidsschattingen van de twee standaardafwijkingsparameters $\\(sigma\\) (blauw) en \\(τ\\) (rood).\n\nggplot(posterior_samples(fit),\n       aes(sigma)) +\n  geom_density(color = \"blue\") +\n  geom_density(aes(sd_movieId__Intercept),\n               color = \"red\")\n\nWarning: Method 'posterior_samples' is deprecated. Please see ?as_draws for\nrecommended alternatives.\n\n\n\n\n\nOm de posterior verdelingen van de gemiddelden te tonen, vervorm ik de matrix van gesimuleerde trekkingen door gebruik te maken van de pivot_longer() functie.\n\nposterior_samples(fit) %>% \n  pivot_longer('r_movieId[76093,Intercept]':'r_movieId[81847,Intercept]',\n               names_to = \"Movie\",\n               values_to = \"Effect\") -> post\n\nWarning: Method 'posterior_samples' is deprecated. Please see ?as_draws for\nrecommended alternatives.\n\n\nOnthoud dat we de gemiddelde filmwaardering hebben voorgesteld als \\(\\mu_j=\\beta + \\gamma_j\\). Hieronder staan parallelle boxplots van de posterior verdelingen van \\(mu_1,...,\\mu_8\\).\n\nggplot(post, aes(Movie, Effect + b_Intercept)) +\n  geom_boxplot() +\n  coord_flip()"
  }
]